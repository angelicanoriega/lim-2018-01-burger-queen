{"version":3,"sources":["componenst/form.js","componenst/title.js","componenst/firstFace.js","componenst/btnSee.js","componenst/moreFood.js","componenst/btnFood.js","componenst/secondFace.js","componenst/all.js","App.js","serviceWorker.js","index.js"],"names":["Second","react_default","a","createElement","className","type","placeholder","value","Component","Title","First","componenst_title","componenst_form","BtnSee","More","BtnFood","btnSee","btnFood","moreFood","All","firstFace","secondFace","App","componenst_all","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wTAeeA,0LAXX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACTH,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,QAAQC,YAAY,YAChCL,EAAAC,EAAAC,cAAA,SAAOE,KAAK,WAAUC,YAAY,kBAClCL,EAAAC,EAAAC,cAAA,SAAOC,UAAU,MAAMC,KAAK,SAASE,MAAM,mBAPlCC,cCWNC,0LARX,OACER,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,wBAJaI,cCgBLE,0LAbX,OACET,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACQ,EAAD,OAEDV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2EACbH,EAAAC,EAAAC,cAACS,EAAD,eARYJ,cCmBLK,mLAlBX,OACEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCAGfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCAGfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCAXNI,aCWNM,mLATX,OACIb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCAJRI,aCeJO,mLAbX,OACId,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCARLI,aCyBPR,0LApBX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACbH,EAAAC,EAAAC,cAACa,EAAD,OAEFf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACVH,EAAAC,EAAAC,cAACc,EAAD,MACAhB,EAAAC,EAAAC,cAACe,EAAD,CAAUd,UAAU,iBAGvBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCAbRI,cCSNW,mLATX,OACElB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACiB,EAAD,MACAnB,EAAAC,EAAAC,cAACkB,EAAD,cALYb,aCUHc,mLARX,OACErB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoB,EAAD,cAJUf,aCQEgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7B,EAAAC,EAAAC,cAAC4B,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.9db9c872.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Second extends Component {\r\n  render() {\r\n    return (\r\n      <div className='init'>\r\n            <h1>Iniciar Seción</h1>\r\n            <input type=\"email\" placeholder=\"Usuario\" />\r\n            <input type='password'placeholder=\"Contraseña\" />\r\n            <input className='btn' type=\"button\" value=\"Entrar\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Second;","import React, { Component } from 'react';\r\nimport './title.css'\r\n\r\nclass Title extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n       <h1 className='title'>Burgen Queen</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Title;","import React, { Component } from 'react';\r\nimport Form from './form';\r\nimport Title from './title';\r\nimport './form.css';\r\nclass First extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n      <div>          \r\n       <Title/>\r\n      </div>\r\n      <div className=\"container-fluid slider d-flex justify-content-center align-items-center\">\r\n        <Form/>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default First;","import React, { Component } from 'react';\r\n\r\n\r\nclass BtnSee extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className='row'>\r\n            <div className=\"col-4 col-md-12 bg-dark p-2\">\r\n\r\n            </div>      \r\n            <div className=\"col-4 col-md-12 bg-danger p-2\">\r\n\r\n            </div>      \r\n            <div className=\"col-4 col-md-12 bg-dark p-2\" >\r\n\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BtnSee;","import React, { Component } from 'react';\r\n\r\n\r\nclass More extends Component {\r\n  render() {\r\n    return (\r\n        <div className='row'>\r\n            <div className=\"col-md-12 bg-dark p-2\">\r\n            </div>      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default More;","import React, { Component } from 'react';\r\n\r\n\r\nclass BtnFood extends Component {\r\n  render() {\r\n    return (\r\n        <div className='row'>\r\n            <div className=\"col-4 col-md-4 bg-dark p-2\">\r\n            </div>      \r\n            <div className=\"col-4 col-md-4 bg-danger p-2\">\r\n            </div>      \r\n            <div className=\"col-4 col-md-4 bg-dark p-2\" >\r\n            </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BtnFood;","import React, { Component } from 'react';\r\nimport BtnSee from './btnSee';\r\nimport MoreFood from './moreFood';\r\nimport BtnFood from './btnFood';\r\nimport './sf.css'\r\n\r\nclass Second extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid slider\">\r\n        <div className='row'>\r\n            <div className=\"col-12 col-md-2 bg-dark p-2\">\r\n              <BtnSee/>\r\n            </div>      \r\n            <div className=\"col-12 col-md-6 bg-danger p-2\">\r\n                 <BtnFood/>\r\n                 <MoreFood className='content p-4'/>\r\n\r\n              </div>\r\n              <div className=\"col-12 col-md-4 bg-dark p-2\" >\r\n\r\n            </div>\r\n            </div>      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Second;","import React, { Component } from 'react';\r\nimport First from './firstFace';\r\nimport Second from './secondFace';\r\n\r\nclass All extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n      <First/> \r\n      <Second/> \r\n      </div> \r\n    );\r\n  }\r\n}\r\n\r\nexport default All;","import React, { Component } from 'react';\nimport './App.css';\nimport All from './componenst/all'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <All/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}